apiVersion: v1.1
pipelines:
  - name: Conan_App
    configuration:
      environmentVariables:
        readOnly:
          art_url: http://artifactory-eu.soleng-emea-staging.jfrog.team/artifactory
          art_repo: winter-conan
          config_url: https://github.com/conan-ci-cd-training/settings.git
    steps:
      - name: libA   
        type: DockerBuild
        configuration:
          dockerFileLocation: . 
          dockerFileName: Dockerfile
          dockerImageName: docker-dev-local.artifactory-eu.soleng-emea-staging.jfrog.team/build-liba
          dockerImageTag: ${run_number}
          dockerOptions: --build-arg build_name=libA --build-arg build_number=${run_number}  --build-arg artifactory=${art_url} --build-arg ci_user=${int_artSecret_user}  --build-arg apikey=${int_artSecret_apikey} --build-arg cfg_repo=${config_url}  --build-arg art_repo=${art_repo}  --build-arg up_pattern=* --build-arg component=libA 
          inputResources:
            - name: conan_pipeline_src
          integrations:
            - name: registry_eu
            - name: artSecret
        execution:
          onStart:
            - printenv int_artSecret_user
            - printenv int_artSecret_apikey
      - name: TestlibA 
        type: Bash
        configuration:
          inputSteps:
          - name: libA 
          integrations:
            - name: artSecret
          outputResources:
#            - name: fspec_libA_ok 
            - name: aql_libA_ok 
        execution:
          onExecute:
            - echo "Testing ..." 
          onSuccess:
            - echo "Adding props..." 
            - curl -fL https://getcli.jfrog.io | sh &&  chmod 755 jfrog  
            - ./jfrog rt c --interactive=false --url=${art_url} --user=${int_artSecret_user} --apikey=${int_artSecret_apikey} art7 && ./jfrog rt use art7 && ./jfrog rt ping
            - curl -O https://raw.githubusercontent.com/cyan21/conan-pipeline/master/spec.json  
            - cat spec.json  
            - sed -i "s/#BUILD_NAME#/libA/" spec.json && sed -i "s/#BUILD_NUMBER#/${run_number}/" spec.json && cat spec.json 
            - ./jfrog rt sp "test=validated" --spec=spec.json
            - echo "Props Added !" 
      - name: libB 
        type: DockerBuild
        configuration:
          dockerFileLocation: . 
          dockerFileName: Dockerfile
          dockerImageName: docker-dev-local.artifactory-eu.soleng-emea-staging.jfrog.team/build-libb
          dockerImageTag: ${run_number}
          dockerOptions: --build-arg build_name=libB --build-arg build_number=${run_number}  --build-arg artifactory=${art_url} --build-arg ci_user=${int_artSecret_user}  --build-arg apikey=${int_artSecret_apikey} --build-arg cfg_repo=${config_url}  --build-arg art_repo=${art_repo}  --build-arg up_pattern=* --build-arg component=libB 
          inputResources:
            - name: conan_pipeline_src
#            - name: fspec_libA_ok 
            - name: aql_libA_ok 
          integrations:
            - name: registry_eu
            - name: artSecret
        execution:
          onStart:
            - printenv int_artSecret_user
            - printenv int_artSecret_apikey
      - name: TestlibB 
        type: Bash
        configuration:
          inputSteps:
          - name: libB 
          integrations:
            - name: artSecret
        execution:
          onExecute:
            - echo "Testing ..." 
          onSuccess:
            - echo "Adding props..." 
            - curl -fL https://getcli.jfrog.io | sh &&  chmod 755 jfrog  
            - ./jfrog rt c --interactive=false --url=${art_url} --user=${int_artSecret_user} --apikey=${int_artSecret_apikey} art7 && ./jfrog rt use art7 && ./jfrog rt ping
            - curl -O https://raw.githubusercontent.com/cyan21/conan-pipeline/master/spec.json  
            - cat spec.json  
            - sed -i "s/#BUILD_NAME#/libB/" spec.json && sed -i "s/#BUILD_NUMBER#/${run_number}/" spec.json && cat spec.json 
            - ./jfrog rt sp "test=validated" --spec=spec.json
      - name: libC   
        type: DockerBuild
        configuration:
          dockerFileLocation: . 
          dockerFileName: Dockerfile
          dockerImageName: docker-dev-local.artifactory-eu.soleng-emea-staging.jfrog.team/build-libc
          dockerImageTag: ${run_number}
          dockerOptions: --build-arg build_name=libC --build-arg build_number=${run_number}  --build-arg artifactory=${art_url}  --build-arg ci_user=${int_artSecret_user}  --build-arg apikey=${int_artSecret_apikey} --build-arg cfg_repo=${config_url} --build-arg art_repo=${art_repo} --build-arg up_pattern=* --build-arg component=libC
          inputResources:
            - name: conan_pipeline_src
          integrations:
            - name: registry_eu
            - name: artSecret
        execution:
          onStart:
            - printenv int_artSecret_user
            - printenv int_artSecret_apikey
      - name: TestlibC 
        type: Bash
        configuration:
          inputSteps:
          - name: libC 
          integrations:
            - name: artSecret
        execution:
          onExecute:
            - echo "Testing ..." 
          onSuccess:
            - echo "Adding props..." 
            - curl -fL https://getcli.jfrog.io | sh &&  chmod 755 jfrog  
            - ./jfrog rt c --interactive=false --url=${art_url} --user=${int_artSecret_user} --apikey=${int_artSecret_apikey} art7 && ./jfrog rt use art7 && ./jfrog rt ping
            - curl -O https://raw.githubusercontent.com/cyan21/conan-pipeline/master/spec.json  
            - cat spec.json  
            - sed -i "s/#BUILD_NAME#/libC/" spec.json && sed -i "s/#BUILD_NUMBER#/${run_number}/" spec.json && cat spec.json 
            - ./jfrog rt sp "test=validated" --spec=spec.json
      - name: syncDeps 
        type: Bash
        configuration:
          inputSteps:
          - name: TestlibB 
          - name: TestlibC 
          integrations:
            - name: artSecret
          outputResources:
            - name: fspec_deps_ok 
        execution:
          onSuccess:
            - echo "Alright !!" 
      - name: cppApp   
        type: DockerBuild
        configuration:
          dockerFileLocation: . 
          dockerFileName: Dockerfile
          dockerImageName: docker-dev-local.artifactory-eu.soleng-emea-staging.jfrog.team/build-cppapp
          dockerImageTag: ${run_number}
          dockerOptions: --build-arg build_name=cppApp --build-arg build_number=${run_number}  --build-arg artifactory=${art_url}  --build-arg ci_user=${int_artSecret_user}  --build-arg apikey=${int_artSecret_apikey} --build-arg cfg_repo=${config_url}  --build-arg art_repo=${art_repo}  --build-arg up_pattern=* --build-arg component=App
          inputResources:
            - name: conan_pipeline_src
            - name: fspec_deps_ok 
          integrations:
            - name: artSecret
            - name: registry_eu
        execution:
          onSuccess:
            - echo "Adding props..." 
            - curl -fL https://getcli.jfrog.io | sh &&  chmod 755 jfrog  
            - ./jfrog rt c --interactive=false --url=${art_url} --user=${int_artSecret_user} --apikey=${int_artSecret_apikey} art7 && ./jfrog rt use art7 && ./jfrog rt ping
            - curl -O https://raw.githubusercontent.com/cyan21/conan-pipeline/master/spec.json  
            - cat spec.json  
            - sed -i "s/#BUILD_NAME#/cppApp/" spec.json && sed -i "s/#BUILD_NUMBER#/${run_number}/" spec.json && cat spec.json 
      - name: link_Build_Info 
        type: Bash
        configuration:
          inputSteps:
          - name: cppApp 
          outputResources:
            - name: App_BuildInfo  
        execution:
          onSuccess:
            - echo "Passed tests" 
      - name: promotion_to_prod 
        type: PromoteBuild 
        configuration:
          targetRepository: winter-conan-prod-local
          includeDependencies: false
          status: "Production_ready"
          comment: "Passed tests"
          copy: false
          inputResources:
            - name: App_BuildInfo 
          outputResources:
            - name: App_BuildInfo_prod_ok 
        execution:
          onSuccess:
            - echo "Passed tests" 

######################################################
#
      - name: init_release_bundle
        type: CreateReleaseBundle 
        configuration:
          releaseBundleName: myApp 
          releaseBundleVersion: 0.0.3 
          dryRun: false
          sign: true 
          description: automatic creation 
          releaseNotes:
            syntax: markdown
            content: |
              # Description 
              super release 
              * Feature 1 
              * Bigfix 1
          inputResources:
            - name: myApp_BuildInfo_prod_ok 
          outputResources:
            - name: myApp_RB 

      - name: distribute_myApp
        type: DistributeReleaseBundle
        configuration:
          dryRun: false 
          inputResources:
            - name: myApp_RB 
              trigger: true   
            - name: myApp_distributionRule
              trigger: false    # default true
